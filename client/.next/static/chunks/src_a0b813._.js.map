{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/dragonfire/Desktop/NextJS/authproject/client/src/tanstack/api.tsx"],"sourcesContent":["import { UserCred } from \"@/types\";\nimport axios from \"axios\";\n\nconst BASE_URL = \"http://localhost:3001\";\n\nconst loginInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport const verifyTokenInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n\nexport const login = async (userCred: UserCred) => {\n  const res = await loginInstance.post(\"/login\", userCred, {\n    withCredentials: true,\n  });\n  return res;\n};\n\n\n\nexport const verifyToken = async () => {\n  try {\n    const res = await verifyTokenInstance.get(\"/verify\");\n    console.log(res);  \n    return res;\n  } catch (e) {\n    const err = e as {status: number};\n    const statusCode = err.status\n    return statusCode;\n  }\n};\n\n"],"names":[],"mappings":";;;;;AACA;;AAEA,MAAM,WAAW;AAEjB,MAAM,gBAAgB,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;AACF;AAEO,MAAM,sBAAsB,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC9C,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;AACF;AAGO,MAAM,QAAQ,OAAO;IAC1B,MAAM,MAAM,MAAM,cAAc,IAAI,CAAC,UAAU,UAAU;QACvD,iBAAiB;IACnB;IACA,OAAO;AACT;AAIO,MAAM,cAAc;IACzB,IAAI;QACF,MAAM,MAAM,MAAM,oBAAoB,GAAG,CAAC;QAC1C,QAAQ,GAAG,CAAC;QACZ,OAAO;IACT,EAAE,OAAO,GAAG;QACV,MAAM,MAAM;QACZ,MAAM,aAAa,IAAI,MAAM;QAC7B,OAAO;IACT;AACF"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///home/dragonfire/Desktop/NextJS/authproject/client/src/tanstack/queries.tsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\nimport { verifyToken } from \"./api\";\n\n\nexport const useVerifyToken = () => {\n    const {veri}\n    const {data, isLoading} = useQuery({\n        queryKey: ['token'],\n        queryFn: verifyToken,\n    });\n    return {data, isLoading};\n}"],"names":[],"mappings":";;;AACA;AADA;;;;AAIO,MAAM,iBAAiB;;IAC1B,MAAM,EAAC,IAAI,EAAC;IACZ,MAAM,EAAC,IAAI,EAAE,SAAS,EAAC,GAAG,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAE;QAC/B,UAAU;YAAC;SAAQ;QACnB,SAAS,0HAAA,CAAA,cAAW;IACxB;IACA,OAAO;QAAC;QAAM;IAAS;AAC3B;GAPa;;QAEiB,8KAAA,CAAA,WAAQ"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///home/dragonfire/Desktop/NextJS/authproject/client/src/app/profile/page.tsx"],"sourcesContent":["\"use client\";\nimport { useVerifyToken } from \"@/tanstack/queries\";\n\nexport default function ProfilePage() {\n    const {data, isLoading} = useVerifyToken();\n    console.log(data);\n\n    if(data === 401) return <p>Unauthorized</p>\n    if (isLoading) return <p>Loading...</p>\n    return (\n        <div>\n        <h1>Profile</h1>\n        \n        </div>\n    );\n    }"],"names":[],"mappings":";;;;AACA;;;AADA;;AAGe,SAAS;;IACpB,MAAM,EAAC,IAAI,EAAE,SAAS,EAAC,GAAG,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD;IACvC,QAAQ,GAAG,CAAC;IAEZ,IAAG,SAAS,KAAK,qBAAO,6LAAC;kBAAE;;;;;;IAC3B,IAAI,WAAW,qBAAO,6LAAC;kBAAE;;;;;;IACzB,qBACI,6LAAC;kBACD,cAAA,6LAAC;sBAAG;;;;;;;;;;;AAIR;GAZoB;;QACM,8HAAA,CAAA,iBAAc;;;KADpB"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}