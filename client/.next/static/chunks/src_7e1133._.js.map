{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/dragonfire/Desktop/NextJS/authproject/client/src/tanstack/TanstackProvider.tsx"],"sourcesContent":["\"use client\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { ReactNode } from \"react\";\n\nexport default function TanstackProvider({\n  children,\n}: {\n  children: ReactNode;\n}) {\n  const queryClient = new QueryClient();\n  return (\n    <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;AADA;;;AAIe,SAAS,iBAAiB,EACvC,QAAQ,EAGT;IACC,MAAM,cAAc,IAAI,gLAAA,CAAA,cAAW;IACnC,qBACE,6LAAC,yLAAA,CAAA,sBAAmB;QAAC,QAAQ;kBAAc;;;;;;AAE/C;KATwB"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/dragonfire/Desktop/NextJS/authproject/client/src/toolkit/userSlice.tsx"],"sourcesContent":["import { InitialState } from \"@/types\";\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nconst initialState: InitialState = {\n  accessToken: \"\",\n};\n\nconst userSlice = createSlice({\n  name: \"userSlice\",\n  initialState,\n  reducers: {\n    saveToken: (state, { payload }: PayloadAction<string>) => {\n      state.accessToken = payload;\n    },\n  },\n});\n\nexport const { saveToken } = userSlice.actions;\n\nexport default userSlice.reducer;\n"],"names":[],"mappings":";;;;AACA;;AAEA,MAAM,eAA6B;IACjC,aAAa;AACf;AAEA,MAAM,YAAY,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN;IACA,UAAU;QACR,WAAW,CAAC,OAAO,EAAE,OAAO,EAAyB;YACnD,MAAM,WAAW,GAAG;QACtB;IACF;AACF;AAEO,MAAM,EAAE,SAAS,EAAE,GAAG,UAAU,OAAO;uCAE/B,UAAU,OAAO"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///home/dragonfire/Desktop/NextJS/authproject/client/src/toolkit/store.tsx"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport userSlice from \"./userSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    userSlice,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"],"names":[],"mappings":";;;AACA;AADA;;;AAGO,MAAM,QAAQ,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QACP,WAAA,+HAAA,CAAA,UAAS;IACX;AACF"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///home/dragonfire/Desktop/NextJS/authproject/client/src/toolkit/ToolkitProvider.tsx"],"sourcesContent":["\"use client\";\nimport { ReactNode } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nexport default function ToolkitProvider({ children }: { children: ReactNode }) {\n  return <Provider store={store}>{children}</Provider>;\n}\n"],"names":[],"mappings":";;;;AAGA;AADA;AAFA;;;;AAKe,SAAS,gBAAgB,EAAE,QAAQ,EAA2B;IAC3E,qBAAO,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,2HAAA,CAAA,QAAK;kBAAG;;;;;;AAClC;KAFwB"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}